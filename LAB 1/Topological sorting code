#include <stdio.h>

void main() {
    int n;
    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    int adj[n][n], indegree[n], queue[n], front = 0, rear = -1, topological_order[n], index = 0;

    for (int i = 0; i < n; i++) {
        indegree[i] = 0;
    }

    printf("Enter the Adjacency matrix: \n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &adj[i][j]);
            if (adj[i][j] == 1) {
                indegree[j]++;
            }
        }
    }

    for (int i = 0; i < n; i++) {
        if (indegree[i] == 0) {
            queue[++rear] = i;
        }
    }

    while (front <= rear) {
        int vertex = queue[front++];
        topological_order[index++] = vertex;

        for (int i = 0; i < n; i++) {
            if (adj[vertex][i] == 1) {
                indegree[i]--;
                if (indegree[i] == 0) {
                    queue[++rear] = i;
                }
            }
        }
    }

    if (index != n) {
        printf("There exists a cycle in the graph. Topological sorting is not possible.\n");
    } else {
        printf("Topological Sorting: ");
        for (int i = n-1; i >= 0; i--) {
            printf("%d ", topological_order[i]);
        }
        printf("\n");
    }
}
